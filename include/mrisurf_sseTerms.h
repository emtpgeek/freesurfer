#pragma once
/*
 * @file utilities common to mrisurf*.c but not used outside them
 *
 */
/*
 * surfaces Author: Bruce Fischl, extracted from mrisurf.c by Bevin Brett
 *
 * $ Â© copyright-2014,2018 The General Hospital Corporation (Boston, MA) "MGH"
 *
 * Terms and conditions for use, reproduction, distribution and contribution
 * are found in the 'FreeSurfer Software License Agreement' contained
 * in the file 'LICENSE' found in the FreeSurfer distribution, and here:
 *
 * https://surfer.nmr.mgh.harvard.edu/fswiki/FreeSurferSoftwareLicense
 *
 * Reporting: freesurfer@nmr.mgh.harvard.edu
 *
 */
// Configurable support for checking that some of the parallel loops get the same
// results regardless of thread count
//
// Two common causes of this being false are
//          floating point reductions
//          random numbers being generated by parallel code 
//

#include "mrisurf_metricProperties.h"

double mrisComputeCorrelationError              (MRIS *mris, INTEGRATION_PARMS *parms, int use_stds);
double mrisComputeCorrelationErrorTraceable     (MRIS *mris, INTEGRATION_PARMS *parms, int use_stds, bool trace);
double mrisComputeRepulsiveRatioEnergy          (MRIS *mris, double l_repulse);
double mrisComputeSpringEnergy                  (MRIS *mris);
double mrisComputeThicknessMinimizationEnergy   (MRIS *mris, double l_thick_min,        INTEGRATION_PARMS *parms);
double mrisComputeThicknessNormalEnergy         (MRIS *mris, double l_thick_normal,     INTEGRATION_PARMS *parms);
double mrisComputeThicknessSpringEnergy         (MRIS *mris, double l_thick_spring,     INTEGRATION_PARMS *parms);
double mrisComputeThicknessParallelEnergy       (MRIS *mris, double l_thick_parallel,   INTEGRATION_PARMS *parms);
double mrisComputeThicknessSmoothnessEnergy     (MRIS *mris, double l_tsmooth,          INTEGRATION_PARMS *parms);
double mrisComputeNonlinearAreaSSE              (MRIS *mris);
